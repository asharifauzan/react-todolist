{"version":3,"sources":["Component/Head.jsx","Component/Input.jsx","Component/Filter.jsx","Component/Message.jsx","Component/Body.jsx","FormTodo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Head","handleMode","bind","this","props","mode","icon","className","onClick","Component","Input","state","todo","handleSubmit","handleChange","e","preventDefault","setState","target","value","dark_mode","onSubmit","type","id","readOnly","for","onChange","placeholder","Filter","filter","todolist","handleFilter","mobile","map","val","key","Message","Body","handleClick","handleComplete","todoReset","Object","entries","completed","checked","keys","length","assign","FormTodo","handleTodo","is_dark","App","header_background","icon_mode","handleReset","mode_filter","newTodo","document","body","style","background","window","addEventListener","innerWidth","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9db2364.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Head extends Component{\n  constructor(){\n    super();\n    this.handleMode = this.handleMode.bind(this);\n  }\n  handleMode(){\n    this.props.mode(this.props.icon);\n  }\n  render(){\n    return(\n      <div className='todo-head'>\n        <h1>TODO</h1>\n        <div className={this.props.icon} onClick={this.handleMode}></div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nexport default class Input extends Component{\n  constructor(){\n    super();\n    this.state = {\n      todo: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    if (!this.state.todo) {\n      return;\n    }\n    this.props.todo(this.state.todo);\n    this.setState({todo: ''});\n  }\n  handleChange(e){\n    this.setState({todo: e.target.value});\n  }\n  render(){\n    return (\n      <form className={this.props.dark_mode ? 'todo-input dark': 'todo-input'} onSubmit={this.handleSubmit}>\n        <div className='round'>\n          <input type='checkbox' id='todo-input' readOnly/>\n          <label className={this.props.dark_mode ? 'dark-label' : null} for='todo-input'></label>\n        </div>\n        <input type='text' onChange={this.handleChange} value={this.state.todo} placeholder='Create a new todo..' />\n      </form>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\nexport default class Filter extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      filter: ['all', 'active', 'completed'],\n      todo: props.todolist\n    }\n  }\n  handleFilter(filter){\n    this.props.handleFilter(filter)\n  }\n  render(){\n    return(\n      <div className={this.props.mobile ? 'filter-mobile' : 'filter'}>\n        {this.state.filter.map((val, key)=>{\n          return <p\n                  key={key}\n                  className={this.props.filter === val && this.props.dark_mode ? 'active-dark'\n                              : this.props.filter === val && !this.props.dark_mode ? 'active'\n                              : null}\n                  onClick={()=>{this.handleFilter(val)}}>\n                  {val}\n                </p>\n        })}\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Message(props){\n  return(\n    <span className={props.dark_mode ? 'message-dnd dark' : 'message-dnd'}>Drag and drop to reorder list</span>\n  )\n}\n","import React, {Component} from 'react';\nimport Filter from './Filter';\nimport Message from './Message';\n\nexport default class Body extends Component{\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleComplete = this.handleComplete.bind(this);\n  }\n  handleClick(){\n    this.props.todoReset();\n  }\n  handleFilter(filter){\n    this.props.handleFilter(filter)\n  }\n  handleComplete(id){\n    this.props.handleComplete(id);\n  }\n  static getDerivedStateFromProps(props, state){\n    let todolist = props.todolist;\n    if(props.filter === 'active'){\n      todolist = Object.entries(props.todolist).filter(([key, val]) => val.completed === false).map((val, key) =>{\n        return val[1]\n      })\n      todolist = Object.assign({}, todolist);\n    } else if(props.filter === 'completed'){\n      todolist = Object.entries(props.todolist).filter(([key, val]) => val.completed === true).map((val, key) =>{\n        return val[1]\n      })\n      todolist = Object.assign({}, todolist);\n    }\n    return {todo: todolist}\n  }\n  render(){\n    return(\n      <>\n      <div className={this.props.dark_mode ? 'todo-body dark': 'todo-body'}>\n        <ul>\n          {Object.entries(this.state.todo).map(([key, val])=> {\n            return (\n              <li key={key}>\n                <div className={val.completed ? 'round round-checked' : 'round'}>\n                  <input\n                    id={'checkbox'+val.id}\n                    checked={val.completed}\n                    type='checkbox'\n                    readOnly\n                  />\n                  <label className={this.props.dark_mode ? 'dark-label' : null} for={'checkbox'+val.id}></label>\n                </div>\n                <span className={val.completed ? 'strike' : null}>{val.todo}</span>\n                <p onClick={()=>{this.handleComplete(val.id)}}>X</p>\n              </li>\n            )\n          })}\n        </ul>\n        <div className='control'>\n          <div className='amount'>{Object.keys(this.state.todo).length} items left</div>\n          {!this.props.mobile ? <Filter\n            handleFilter={this.handleFilter}\n            filter={this.props.filter}\n            dark_mode={this.props.dark_mode}\n            mobile={this.props.mobile}/> : null}\n          <div className='reset' onClick={this.handleClick}>Clear Completed</div>\n        </div>\n      </div>\n      {this.props.mobile ? <Filter\n         handleFilter={this.handleFilter}\n         filter={this.props.filter}\n         dark_mode={this.props.dark_mode}\n         mobile={this.props.mobile}/> : null}\n      <Message dark_mode={this.props.dark_mode}/>\n      </>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Head from './Component/Head';\nimport Input from './Component/Input';\nimport Body from './Component/Body';\n\nexport default class FormTodo extends Component{\n  constructor(){\n    super();\n    this.handleMode = this.handleMode.bind(this);\n    this.handleTodo = this.handleTodo.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleComplete = this.handleComplete.bind(this);\n  }\n  handleMode(mode){\n    this.props.mode(mode);\n  }\n  handleTodo(todo){\n    this.props.todo(todo);\n  }\n  handleFilter(filter){\n    this.props.handleFilter(filter);\n  }\n  handleComplete(id){\n    this.props.handleComplete(id);\n  }\n  render(){\n    return(\n      <div className='todo-wrapper'>\n        <Head icon={this.props.icon} mode={this.handleMode}/>\n        <Input dark_mode={this.props.is_dark} todo={this.props.todo}/>\n        <Body dark_mode={this.props.is_dark}\n        todolist={this.props.todolist}\n        todoReset={this.props.todoReset} \n        filter={this.props.filter}\n        handleFilter={this.handleFilter}\n        handleComplete={this.handleComplete}\n        mobile={this.props.mobile}\n      />\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport './assets/style/style.css';\nimport FormTodo from './FormTodo';\n\nexport default class App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      todo: {},\n      filter: 'all',\n      header_background: 'desktop-light',\n      icon_mode: 'icon-moon',\n      dark_mode: false,\n      key: 0,\n      mobile: null\n    }\n    this.handleMode = this.handleMode.bind(this);\n    this.handleTodo = this.handleTodo.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleComplete = this.handleComplete.bind(this);\n  }\n  handleFilter(mode_filter){\n    this.setState({filter: mode_filter})\n  }\n  handleTodo(todo){\n    let todolist = this.state.todo\n    let newTodo = {id: this.state.key, todo, completed: false}\n    todolist[this.state.key] = newTodo\n    this.setState({\n      todo: todolist,\n      key: this.state.key+1\n    })\n  }\n  handleReset(){\n    this.setState({\n      todo: {}\n    })\n  }\n  handleComplete(id){\n    let todolist = this.state.todo\n    todolist[id].completed = !todolist[id].completed\n    this.setState({todo: todolist})\n  }\n  handleMode(mode){\n    // set dark mode\n    if(mode === 'icon-moon'){\n      this.setState({\n        header_background: 'desktop-dark',\n        icon_mode: 'icon-sun',\n        dark_mode: true\n      });\n      document.body.style.background = 'hsl(235, 24%, 19%)';\n      return;\n    }\n    // set light mode\n    this.setState({\n      header_background: 'desktop-light',\n      icon_mode: 'icon-moon',\n      dark_mode: false\n    });\n    document.body.style.background = 'hsl(0, 0%, 98%)';\n  }\n  componentDidMount(){\n    window.addEventListener('resize', ()=>{\n      let mobile = window.innerWidth > 375 ? false : true;\n      this.setState({mobile})\n    })\n  }\n  componentWillUnmount(){\n    let mobile = window.innerWidth > 375 ? false : true;\n    this.setState({mobile})\n  }\n  render(){\n    return(\n      <React.Fragment>\n        <header className={this.state.header_background}></header>\n        <FormTodo\n          icon={this.state.icon_mode}\n          mode={this.handleMode}\n          is_dark={this.state.dark_mode}\n          todo={this.handleTodo}\n          filter={this.state.filter}\n          handleFilter={this.handleFilter}\n          todolist={this.state.todo}\n          todoReset={this.handleReset}\n          handleComplete={this.handleComplete}\n          mobile={this.state.mobile}\n        />\n      </React.Fragment>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}